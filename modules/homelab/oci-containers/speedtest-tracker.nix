# Auto-generated using compose2nix v0.3.2-pre.
{ pkgs, lib, ... }:

{
  systemd.tmpfiles.rules = [
    "d /var/lib/speedtest-tracker/config 0755 root root - -"
  ];

  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."speedtest-tracker" = {
    image = "lscr.io/linuxserver/speedtest-tracker:latest";
    environment = {
      "APP_KEY" = "base64:kYdJp7jGO6ni/F5QXBQkoicMZU/bxNrcwrd6DZ40aN8=";
      "APP_TIMEZONE" = "";
      "CHART_DATETIME_FORMAT" = "";
      "DATETIME_FORMAT" = "";
      "DB_CONNECTION" = "sqlite";
      "PGID" = "1000";
      "PRUNE_RESULTS_OLDER_THAN" = "";
      "PUID" = "1000";
      "SPEEDTEST_SCHEDULE" = "";
      "SPEEDTEST_SERVERS" = "";
    };
    volumes = [
      "/var/lib/speedtest-tracker/config:/config:rw"
    ];
    ports = [
      "8080:80/tcp"
      "8443:443/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=speedtest-tracker"
      "--network=speedtest-tracker_default"
    ];
  };
  systemd.services."podman-speedtest-tracker" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-speedtest-tracker_default.service"
    ];
    requires = [
      "podman-network-speedtest-tracker_default.service"
    ];
    partOf = [
      "podman-compose-speedtest-tracker-root.target"
    ];
    wantedBy = [
      "podman-compose-speedtest-tracker-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-speedtest-tracker_default" = {
    path = [ pkgs.podman ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f speedtest-tracker_default";
    };
    script = ''
      podman network inspect speedtest-tracker_default || podman network create speedtest-tracker_default
    '';
    partOf = [ "podman-compose-speedtest-tracker-root.target" ];
    wantedBy = [ "podman-compose-speedtest-tracker-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-speedtest-tracker-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
